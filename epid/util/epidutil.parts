# pylint:disable=I0011,W0401,W0614,C0103,E0602
############################################################################
# Copyright 2019-2020 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################
"""Build configuration for utility library.
"""
Import('*')
env.PartName('epidutil')

include_files = Pattern(
    src_dir='include/epid', includes=['*.h'], recursive=False).files()
include_files11 = Pattern(
    src_dir='include/epid/1.1', includes=['*.h'], recursive=False).files()

src_files = Pattern(src_dir='src', includes=['*.c'], recursive=False).files()
ipp_impl_files = Pattern(
    src_dir='src/ipp-impl', includes=['*.c'], recursive=True).files()
# tiny_impl_files = Pattern(
#     src_dir='src/tiny-impl', includes=['*.c'], recursive=True).files()

if 'tiny' in env['MODE']:
    env.DependsOn([Component('epiddefs'), Component('common')])
   # src_files += tiny_impl_files
    lib_name = env.subst('${PART_SHORT_NAME}')
else:
    env.DependsOn(
        [Component('epiddefs'),
         Component('ippmath'),
         Component('common')])
    src_files += ipp_impl_files
    lib_name = env.subst('${PART_SHORT_NAME}')

env.Append(CPPPATH=[AbsDir('include')])
env.Append(CPPPATH=[AbsDir('src')])

outputs = env.Library(lib_name, src_files)

sdk_outs = env.Sdk(outputs)
env.SdkInclude(include_files, sub_dir='epid')
env.SdkInclude(include_files11, sub_dir='epid/1.1')

if 'install_lib' in env['MODE'] and 'shared' not in env['MODE']:
    env.InstallInclude(include_files, sub_dir='epid')
    env.InstallInclude(include_files11, sub_dir='epid/1.1')
    env.InstallLib(outputs)

is_utest_build = False
for i in BUILD_TARGETS:
    if "utest::" in str(i):
        is_utest_build = True
if is_utest_build:
    env.Part(
        parts_file='utest.parts', CONFIG=DefaultEnvironment().subst('$CONFIG'))
