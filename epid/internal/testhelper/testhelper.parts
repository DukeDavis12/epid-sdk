############################################################################
# Copyright 2016-2020 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################
Import('*')
env.PartName('testhelper')

src_files = Pattern(
    src_dir='src', includes=['*-testhelper.cc'], excludes=[],
    recursive=True).files()
include_files = Pattern(
    src_dir='include/testhelper',
    includes=['*.h'],
    excludes=[],
    recursive=False).files()
include_files11 = Pattern(
    src_dir='include/testhelper/1.1',
    includes=['*.h'],
    excludes=[],
    recursive=False).files()
test_data_files = Pattern(
    src_dir='include/testhelper/testdata',
    includes=['*'],
    excludes=[],
    recursive=True)
epid11_test_data_files = Pattern(
    src_dir='testdata/1.1', includes=['*'], excludes=[], recursive=True)

# unit tests
utest_files = Pattern(
    src_dir='unittests', includes=['*-test.cc'], excludes=[],
    recursive=True).files()

env.Append(CPPPATH=[AbsDir('include'),AbsDir('../../member/include')])

if 'use_tss' in env['MODE']:
    env.Append(CPPDEFINES=['TPM_TSS'])
elif not 'split' in env['MODE']:
    env.Append(CPPDEFINES=['TINY'])
    env.ExportCPPDEFINES(['TINY'])

env.DependsOn([
    Component('epiddefs'),
    Component('common'),
    Component('epidutil'),
    Component('ippmath'),
    Component('member'),
    Component('verifier'),
    Component('ippcp'),
])

testenv = env.Clone()

outputs = env.Library('${PART_NAME}', src_files)
env.Sdk(outputs)
env.SdkInclude(include_files, sub_dir='testhelper')
env.SdkInclude(include_files11, sub_dir='testhelper/1.1')
env.SdkInclude(test_data_files, sub_dir='testhelper/testdata')

testenv['UNIT_TEST_TARGET_NAME'] = "${PART_NAME}-${UNIT_TEST_TARGET}"
testenv.UnitTest(
    "utest",
    utest_files,
    command_args=[
        '--gtest_color=yes',
        '--gtest_print_time=1',
        '--gtest_output=xml',
        '--gtest_filter=**',
    ],
    make_pdb=(env.isConfigBasedOn('debug')),
    depends=[Component('gtest'), Component('testhelper')],
    INSTALL_BIN='${INSTALL_TEST_BIN}')
